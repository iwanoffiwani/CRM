// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the Layout component +++ renderer component 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Layout>
        <div
          className="makeStyles-root-1"
        >
          <CssBaseline />
          <WithStyles(ForwardRef(AppBar))
            className="makeStyles-appBar-2"
            color="default"
            position="fixed"
          >
            <ForwardRef(AppBar)
              className="makeStyles-appBar-2"
              classes={
                Object {
                  "colorDefault": "MuiAppBar-colorDefault",
                  "colorPrimary": "MuiAppBar-colorPrimary",
                  "colorSecondary": "MuiAppBar-colorSecondary",
                  "positionAbsolute": "MuiAppBar-positionAbsolute",
                  "positionFixed": "MuiAppBar-positionFixed",
                  "positionRelative": "MuiAppBar-positionRelative",
                  "positionStatic": "MuiAppBar-positionStatic",
                  "positionSticky": "MuiAppBar-positionSticky",
                  "root": "MuiAppBar-root",
                }
              }
              color="default"
              position="fixed"
            >
              <WithStyles(ForwardRef(Paper))
                className="MuiAppBar-root MuiAppBar-positionFixed makeStyles-appBar-2 MuiAppBar-colorDefault mui-fixed"
                component="header"
                elevation={4}
                square={true}
              >
                <ForwardRef(Paper)
                  className="MuiAppBar-root MuiAppBar-positionFixed makeStyles-appBar-2 MuiAppBar-colorDefault mui-fixed"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  component="header"
                  elevation={4}
                  square={true}
                >
                  <header
                    className="MuiPaper-root MuiPaper-elevation4 MuiAppBar-root MuiAppBar-positionFixed makeStyles-appBar-2 MuiAppBar-colorDefault mui-fixed"
                  >
                    <WithStyles(ForwardRef(Toolbar))>
                      <ForwardRef(Toolbar)
                        classes={
                          Object {
                            "dense": "MuiToolbar-dense",
                            "gutters": "MuiToolbar-gutters",
                            "regular": "MuiToolbar-regular",
                            "root": "MuiToolbar-root",
                          }
                        }
                      >
                        <div
                          className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="open drawer"
                            className="makeStyles-menuButton-4"
                            color="inherit"
                            edge="start"
                            onClick={[Function]}
                          >
                            <ForwardRef(IconButton)
                              aria-label="open drawer"
                              className="makeStyles-menuButton-4"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              edge="start"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="open drawer"
                                centerRipple={true}
                                className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                disabled={false}
                                focusRipple={true}
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="open drawer"
                                  centerRipple={true}
                                  className="MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <button
                                    aria-label="open drawer"
                                    className="MuiButtonBase-root MuiIconButton-root makeStyles-menuButton-4 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                    </span>
                                    <NoSsr>
                                      <WithStyles(undefined)
                                        center={true}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={true}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(undefined)>
                                    </NoSsr>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                          <WithStyles(ForwardRef(Typography))
                            className="makeStyles-title-13"
                            noWrap={true}
                            variant="h6"
                          >
                            <ForwardRef(Typography)
                              className="makeStyles-title-13"
                              classes={
                                Object {
                                  "alignCenter": "MuiTypography-alignCenter",
                                  "alignJustify": "MuiTypography-alignJustify",
                                  "alignLeft": "MuiTypography-alignLeft",
                                  "alignRight": "MuiTypography-alignRight",
                                  "body1": "MuiTypography-body1",
                                  "body2": "MuiTypography-body2",
                                  "button": "MuiTypography-button",
                                  "caption": "MuiTypography-caption",
                                  "colorError": "MuiTypography-colorError",
                                  "colorInherit": "MuiTypography-colorInherit",
                                  "colorPrimary": "MuiTypography-colorPrimary",
                                  "colorSecondary": "MuiTypography-colorSecondary",
                                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                  "displayBlock": "MuiTypography-displayBlock",
                                  "displayInline": "MuiTypography-displayInline",
                                  "gutterBottom": "MuiTypography-gutterBottom",
                                  "h1": "MuiTypography-h1",
                                  "h2": "MuiTypography-h2",
                                  "h3": "MuiTypography-h3",
                                  "h4": "MuiTypography-h4",
                                  "h5": "MuiTypography-h5",
                                  "h6": "MuiTypography-h6",
                                  "noWrap": "MuiTypography-noWrap",
                                  "overline": "MuiTypography-overline",
                                  "paragraph": "MuiTypography-paragraph",
                                  "root": "MuiTypography-root",
                                  "srOnly": "MuiTypography-srOnly",
                                  "subtitle1": "MuiTypography-subtitle1",
                                  "subtitle2": "MuiTypography-subtitle2",
                                }
                              }
                              noWrap={true}
                              variant="h6"
                            >
                              <h6
                                className="MuiTypography-root makeStyles-title-13 MuiTypography-h6 MuiTypography-noWrap"
                              />
                            </ForwardRef(Typography)>
                          </WithStyles(ForwardRef(Typography))>
                          <WithStyles(ForwardRef(Button))
                            color="inherit"
                            onClick={[Function]}
                          >
                            <ForwardRef(Button)
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="inherit"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      <ForwardRef
                                        className="makeStyles-addIcon-16"
                                      >
                                        <WithStyles(ForwardRef(SvgIcon))
                                          className="makeStyles-addIcon-16"
                                        >
                                          <ForwardRef(SvgIcon)
                                            className="makeStyles-addIcon-16"
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root makeStyles-addIcon-16"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef>
                                      Добавить
                                    </span>
                                    <NoSsr>
                                      <WithStyles(undefined)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(undefined)>
                                    </NoSsr>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                          <Connect(SearchBar)>
                            <SearchBar
                              orders={Array []}
                              result={[Function]}
                            >
                              <div
                                className="makeStyles-search-139"
                              >
                                <div
                                  className="makeStyles-searchIcon-140"
                                >
                                  <ForwardRef>
                                    <WithStyles(ForwardRef(SvgIcon))>
                                      <ForwardRef(SvgIcon)
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="MuiSvgIcon-root"
                                          focusable="false"
                                          role="presentation"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef>
                                </div>
                                <WithStyles(ForwardRef(InputBase))
                                  classes={
                                    Object {
                                      "input": "makeStyles-inputInput-142",
                                      "root": "makeStyles-inputRoot-141",
                                    }
                                  }
                                  inputProps={
                                    Object {
                                      "aria-label": "search",
                                    }
                                  }
                                  name="search"
                                  onChange={[Function]}
                                  placeholder="Поиск…"
                                >
                                  <ForwardRef(InputBase)
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd",
                                        "adornedStart": "MuiInputBase-adornedStart",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "formControl": "MuiInputBase-formControl",
                                        "fullWidth": "MuiInputBase-fullWidth",
                                        "input": "MuiInputBase-input makeStyles-inputInput-142",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                        "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense",
                                        "inputMultiline": "MuiInputBase-inputMultiline",
                                        "inputSelect": "MuiInputBase-inputSelect",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                        "marginDense": "MuiInputBase-marginDense",
                                        "multiline": "MuiInputBase-multiline",
                                        "root": "MuiInputBase-root makeStyles-inputRoot-141",
                                      }
                                    }
                                    inputProps={
                                      Object {
                                        "aria-label": "search",
                                      }
                                    }
                                    name="search"
                                    onChange={[Function]}
                                    placeholder="Поиск…"
                                  >
                                    <div
                                      className="MuiInputBase-root makeStyles-inputRoot-141"
                                      onClick={[Function]}
                                    >
                                      <input
                                        aria-label="search"
                                        className="MuiInputBase-input makeStyles-inputInput-142"
                                        name="search"
                                        onAnimationStart={[Function]}
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        placeholder="Поиск…"
                                        type="text"
                                      />
                                    </div>
                                  </ForwardRef(InputBase)>
                                </WithStyles(ForwardRef(InputBase))>
                              </div>
                            </SearchBar>
                          </Connect(SearchBar)>
                          <WithStyles(ForwardRef(Button))
                            color="inherit"
                            onClick={[Function]}
                          >
                            <ForwardRef(Button)
                              classes={
                                Object {
                                  "colorInherit": "MuiButton-colorInherit",
                                  "contained": "MuiButton-contained",
                                  "containedPrimary": "MuiButton-containedPrimary",
                                  "containedSecondary": "MuiButton-containedSecondary",
                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                  "disabled": "Mui-disabled",
                                  "endIcon": "MuiButton-endIcon",
                                  "focusVisible": "Mui-focusVisible",
                                  "fullWidth": "MuiButton-fullWidth",
                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                  "label": "MuiButton-label",
                                  "outlined": "MuiButton-outlined",
                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                  "root": "MuiButton-root",
                                  "sizeLarge": "MuiButton-sizeLarge",
                                  "sizeSmall": "MuiButton-sizeSmall",
                                  "startIcon": "MuiButton-startIcon",
                                  "text": "MuiButton-text",
                                  "textPrimary": "MuiButton-textPrimary",
                                  "textSecondary": "MuiButton-textSecondary",
                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                }
                              }
                              color="inherit"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                component="button"
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                type="button"
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiButton-root MuiButton-text MuiButton-colorInherit"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="button"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <button
                                    className="MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-colorInherit"
                                    disabled={false}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={0}
                                    type="button"
                                  >
                                    <span
                                      className="MuiButton-label"
                                    >
                                      Выйти
                                    </span>
                                    <NoSsr>
                                      <WithStyles(undefined)
                                        center={false}
                                      >
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                          classes={
                                            Object {
                                              "child": "MuiTouchRipple-child",
                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                              "ripple": "MuiTouchRipple-ripple",
                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                              "root": "MuiTouchRipple-root",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiTouchRipple-root"
                                          >
                                            <TransitionGroup
                                              childFactory={[Function]}
                                              component={null}
                                              exit={true}
                                            />
                                          </span>
                                        </ForwardRef(TouchRipple)>
                                      </WithStyles(undefined)>
                                    </NoSsr>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(Button)>
                          </WithStyles(ForwardRef(Button))>
                        </div>
                      </ForwardRef(Toolbar)>
                    </WithStyles(ForwardRef(Toolbar))>
                  </header>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </ForwardRef(AppBar)>
          </WithStyles(ForwardRef(AppBar))>
          <WithStyles(ForwardRef(Drawer))
            className="makeStyles-sidebar-6 makeStyles-sidebarClose-11"
            classes={
              Object {
                "paper": "makeStyles-sidebarClose-11",
              }
            }
            open={false}
            variant="permanent"
          >
            <ForwardRef(Drawer)
              className="makeStyles-sidebar-6 makeStyles-sidebarClose-11"
              classes={
                Object {
                  "docked": "MuiDrawer-docked",
                  "modal": "MuiDrawer-modal",
                  "paper": "MuiDrawer-paper makeStyles-sidebarClose-11",
                  "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                  "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                  "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                  "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                  "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                  "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                  "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                  "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                  "root": "MuiDrawer-root",
                }
              }
              open={false}
              variant="permanent"
            >
              <div
                className="MuiDrawer-root MuiDrawer-docked makeStyles-sidebar-6 makeStyles-sidebarClose-11"
              >
                <WithStyles(ForwardRef(Paper))
                  className="MuiDrawer-paper makeStyles-sidebarClose-11 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                  elevation={0}
                  square={true}
                >
                  <ForwardRef(Paper)
                    className="MuiDrawer-paper makeStyles-sidebarClose-11 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                    elevation={0}
                    square={true}
                  >
                    <div
                      className="MuiPaper-root MuiPaper-elevation0 MuiDrawer-paper makeStyles-sidebarClose-11 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                    >
                      <WithStyles(ForwardRef(Toolbar))
                        className="makeStyles-toolbar-12"
                      >
                        <ForwardRef(Toolbar)
                          className="makeStyles-toolbar-12"
                          classes={
                            Object {
                              "dense": "MuiToolbar-dense",
                              "gutters": "MuiToolbar-gutters",
                              "regular": "MuiToolbar-regular",
                              "root": "MuiToolbar-root",
                            }
                          }
                        >
                          <div
                            className="MuiToolbar-root MuiToolbar-regular makeStyles-toolbar-12 MuiToolbar-gutters"
                          >
                            <WithStyles(ForwardRef(IconButton))
                              onClick={[Function]}
                            >
                              <ForwardRef(IconButton)
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                onClick={[Function]}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root"
                                  disabled={false}
                                  focusRipple={true}
                                  onClick={[Function]}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="MuiButtonBase-root MuiIconButton-root"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <ForwardRef>
                                          <WithStyles(ForwardRef(SvgIcon))>
                                            <ForwardRef(SvgIcon)
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                  "colorError": "MuiSvgIcon-colorError",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                  "root": "MuiSvgIcon-root",
                                                }
                                              }
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                                                />
                                              </svg>
                                            </ForwardRef(SvgIcon)>
                                          </WithStyles(ForwardRef(SvgIcon))>
                                        </ForwardRef>
                                      </span>
                                      <NoSsr>
                                        <WithStyles(undefined)
                                          center={true}
                                        >
                                          <ForwardRef(TouchRipple)
                                            center={true}
                                            classes={
                                              Object {
                                                "child": "MuiTouchRipple-child",
                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                "ripple": "MuiTouchRipple-ripple",
                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                "root": "MuiTouchRipple-root",
                                              }
                                            }
                                          >
                                            <span
                                              className="MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </ForwardRef(TouchRipple)>
                                        </WithStyles(undefined)>
                                      </NoSsr>
                                    </button>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </div>
                        </ForwardRef(Toolbar)>
                      </WithStyles(ForwardRef(Toolbar))>
                      <WithStyles(ForwardRef(Divider))>
                        <ForwardRef(Divider)
                          classes={
                            Object {
                              "absolute": "MuiDivider-absolute",
                              "inset": "MuiDivider-inset",
                              "light": "MuiDivider-light",
                              "middle": "MuiDivider-middle",
                              "root": "MuiDivider-root",
                              "vertical": "MuiDivider-vertical",
                            }
                          }
                        >
                          <hr
                            className="MuiDivider-root"
                          />
                        </ForwardRef(Divider)>
                      </WithStyles(ForwardRef(Divider))>
                      <NavBar>
                        <nav
                          className="navbar"
                        >
                          <WithStyles(ForwardRef(List))>
                            <ForwardRef(List)
                              classes={
                                Object {
                                  "dense": "MuiList-dense",
                                  "padding": "MuiList-padding",
                                  "root": "MuiList-root",
                                  "subheader": "MuiList-subheader",
                                }
                              }
                            >
                              <ul
                                className="MuiList-root MuiList-padding"
                              >
                                <WithStyles(ForwardRef(ListItem))>
                                  <ForwardRef(ListItem)
                                    classes={
                                      Object {
                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                        "button": "MuiListItem-button",
                                        "container": "MuiListItem-container",
                                        "dense": "MuiListItem-dense",
                                        "disabled": "Mui-disabled",
                                        "divider": "MuiListItem-divider",
                                        "focusVisible": "Mui-focusVisible",
                                        "gutters": "MuiListItem-gutters",
                                        "root": "MuiListItem-root",
                                        "secondaryAction": "MuiListItem-secondaryAction",
                                        "selected": "Mui-selected",
                                      }
                                    }
                                  >
                                    <li
                                      className="MuiListItem-root MuiListItem-gutters"
                                      disabled={false}
                                    >
                                      <NavLink
                                        className="makeStyles-link-181"
                                        key=".0"
                                        to="/"
                                      >
                                        <Link
                                          aria-current="page"
                                          className="makeStyles-link-181 active"
                                          style={Object {}}
                                          to={
                                            Object {
                                              "hash": "",
                                              "pathname": "/",
                                              "search": "",
                                              "state": null,
                                            }
                                          }
                                        >
                                          <LinkAnchor
                                            aria-current="page"
                                            className="makeStyles-link-181 active"
                                            href="/"
                                            navigate={[Function]}
                                            style={Object {}}
                                          >
                                            <a
                                              aria-current="page"
                                              className="makeStyles-link-181 active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <WithStyles(ForwardRef(ListItemIcon))>
                                                <ForwardRef(ListItemIcon)
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                      "root": "MuiListItemIcon-root",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiListItemIcon-root"
                                                  >
                                                    <ForwardRef>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            role="presentation"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef>
                                                  </div>
                                                </ForwardRef(ListItemIcon)>
                                              </WithStyles(ForwardRef(ListItemIcon))>
                                              <WithStyles(ForwardRef(ListItemText))
                                                primary="Заявки"
                                              >
                                                <ForwardRef(ListItemText)
                                                  classes={
                                                    Object {
                                                      "dense": "MuiListItemText-dense",
                                                      "inset": "MuiListItemText-inset",
                                                      "multiline": "MuiListItemText-multiline",
                                                      "primary": "MuiListItemText-primary",
                                                      "root": "MuiListItemText-root",
                                                      "secondary": "MuiListItemText-secondary",
                                                    }
                                                  }
                                                  primary="Заявки"
                                                >
                                                  <div
                                                    className="MuiListItemText-root"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="MuiListItemText-primary"
                                                      component="span"
                                                      variant="body1"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="MuiListItemText-primary"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        component="span"
                                                        variant="body1"
                                                      >
                                                        <span
                                                          className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                                        >
                                                          Заявки
                                                        </span>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                </ForwardRef(ListItemText)>
                                              </WithStyles(ForwardRef(ListItemText))>
                                            </a>
                                          </LinkAnchor>
                                        </Link>
                                      </NavLink>
                                    </li>
                                  </ForwardRef(ListItem)>
                                </WithStyles(ForwardRef(ListItem))>
                                <WithStyles(ForwardRef(ListItem))>
                                  <ForwardRef(ListItem)
                                    classes={
                                      Object {
                                        "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                        "button": "MuiListItem-button",
                                        "container": "MuiListItem-container",
                                        "dense": "MuiListItem-dense",
                                        "disabled": "Mui-disabled",
                                        "divider": "MuiListItem-divider",
                                        "focusVisible": "Mui-focusVisible",
                                        "gutters": "MuiListItem-gutters",
                                        "root": "MuiListItem-root",
                                        "secondaryAction": "MuiListItem-secondaryAction",
                                        "selected": "Mui-selected",
                                      }
                                    }
                                  >
                                    <li
                                      className="MuiListItem-root MuiListItem-gutters"
                                      disabled={false}
                                    >
                                      <NavLink
                                        className="makeStyles-link-181"
                                        key=".0"
                                        to="/settings"
                                      >
                                        <Link
                                          aria-current={null}
                                          className="makeStyles-link-181"
                                          to={
                                            Object {
                                              "hash": "",
                                              "pathname": "/settings",
                                              "search": "",
                                              "state": null,
                                            }
                                          }
                                        >
                                          <LinkAnchor
                                            aria-current={null}
                                            className="makeStyles-link-181"
                                            href="/settings"
                                            navigate={[Function]}
                                          >
                                            <a
                                              aria-current={null}
                                              className="makeStyles-link-181"
                                              href="/settings"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ListItemIcon))>
                                                <ForwardRef(ListItemIcon)
                                                  classes={
                                                    Object {
                                                      "alignItemsFlexStart": "MuiListItemIcon-alignItemsFlexStart",
                                                      "root": "MuiListItemIcon-root",
                                                    }
                                                  }
                                                >
                                                  <div
                                                    className="MuiListItemIcon-root"
                                                  >
                                                    <ForwardRef>
                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                        <ForwardRef(SvgIcon)
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            className="MuiSvgIcon-root"
                                                            focusable="false"
                                                            role="presentation"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M0 0h20v20H0V0z"
                                                              fill="none"
                                                              transform="scale(1.2, 1.2)"
                                                            />
                                                            <path
                                                              d="M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z"
                                                              transform="scale(1.2, 1.2)"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef>
                                                  </div>
                                                </ForwardRef(ListItemIcon)>
                                              </WithStyles(ForwardRef(ListItemIcon))>
                                              <WithStyles(ForwardRef(ListItemText))
                                                primary="Настройки"
                                              >
                                                <ForwardRef(ListItemText)
                                                  classes={
                                                    Object {
                                                      "dense": "MuiListItemText-dense",
                                                      "inset": "MuiListItemText-inset",
                                                      "multiline": "MuiListItemText-multiline",
                                                      "primary": "MuiListItemText-primary",
                                                      "root": "MuiListItemText-root",
                                                      "secondary": "MuiListItemText-secondary",
                                                    }
                                                  }
                                                  primary="Настройки"
                                                >
                                                  <div
                                                    className="MuiListItemText-root"
                                                  >
                                                    <WithStyles(ForwardRef(Typography))
                                                      className="MuiListItemText-primary"
                                                      component="span"
                                                      variant="body1"
                                                    >
                                                      <ForwardRef(Typography)
                                                        className="MuiListItemText-primary"
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTypography-alignCenter",
                                                            "alignJustify": "MuiTypography-alignJustify",
                                                            "alignLeft": "MuiTypography-alignLeft",
                                                            "alignRight": "MuiTypography-alignRight",
                                                            "body1": "MuiTypography-body1",
                                                            "body2": "MuiTypography-body2",
                                                            "button": "MuiTypography-button",
                                                            "caption": "MuiTypography-caption",
                                                            "colorError": "MuiTypography-colorError",
                                                            "colorInherit": "MuiTypography-colorInherit",
                                                            "colorPrimary": "MuiTypography-colorPrimary",
                                                            "colorSecondary": "MuiTypography-colorSecondary",
                                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                            "displayBlock": "MuiTypography-displayBlock",
                                                            "displayInline": "MuiTypography-displayInline",
                                                            "gutterBottom": "MuiTypography-gutterBottom",
                                                            "h1": "MuiTypography-h1",
                                                            "h2": "MuiTypography-h2",
                                                            "h3": "MuiTypography-h3",
                                                            "h4": "MuiTypography-h4",
                                                            "h5": "MuiTypography-h5",
                                                            "h6": "MuiTypography-h6",
                                                            "noWrap": "MuiTypography-noWrap",
                                                            "overline": "MuiTypography-overline",
                                                            "paragraph": "MuiTypography-paragraph",
                                                            "root": "MuiTypography-root",
                                                            "srOnly": "MuiTypography-srOnly",
                                                            "subtitle1": "MuiTypography-subtitle1",
                                                            "subtitle2": "MuiTypography-subtitle2",
                                                          }
                                                        }
                                                        component="span"
                                                        variant="body1"
                                                      >
                                                        <span
                                                          className="MuiTypography-root MuiListItemText-primary MuiTypography-body1"
                                                        >
                                                          Настройки
                                                        </span>
                                                      </ForwardRef(Typography)>
                                                    </WithStyles(ForwardRef(Typography))>
                                                  </div>
                                                </ForwardRef(ListItemText)>
                                              </WithStyles(ForwardRef(ListItemText))>
                                            </a>
                                          </LinkAnchor>
                                        </Link>
                                      </NavLink>
                                    </li>
                                  </ForwardRef(ListItem)>
                                </WithStyles(ForwardRef(ListItem))>
                              </ul>
                            </ForwardRef(List)>
                          </WithStyles(ForwardRef(List))>
                        </nav>
                      </NavBar>
                      <WithStyles(ForwardRef(Divider))>
                        <ForwardRef(Divider)
                          classes={
                            Object {
                              "absolute": "MuiDivider-absolute",
                              "inset": "MuiDivider-inset",
                              "light": "MuiDivider-light",
                              "middle": "MuiDivider-middle",
                              "root": "MuiDivider-root",
                              "vertical": "MuiDivider-vertical",
                            }
                          }
                        >
                          <hr
                            className="MuiDivider-root"
                          />
                        </ForwardRef(Divider)>
                      </WithStyles(ForwardRef(Divider))>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </div>
            </ForwardRef(Drawer)>
          </WithStyles(ForwardRef(Drawer))>
          <WithStyles(ForwardRef(Drawer))
            className="makeStyles-createOrderDrawer-7"
            classes={
              Object {
                "paper": "makeStyles-createOrderDrawerClose-9",
              }
            }
            open={false}
          >
            <ForwardRef(Drawer)
              className="makeStyles-createOrderDrawer-7"
              classes={
                Object {
                  "docked": "MuiDrawer-docked",
                  "modal": "MuiDrawer-modal",
                  "paper": "MuiDrawer-paper makeStyles-createOrderDrawerClose-9",
                  "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
                  "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
                  "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
                  "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
                  "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
                  "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
                  "paperAnchorRight": "MuiDrawer-paperAnchorRight",
                  "paperAnchorTop": "MuiDrawer-paperAnchorTop",
                  "root": "MuiDrawer-root",
                }
              }
              open={false}
            >
              <ForwardRef(Modal)
                BackdropComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "Naked": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "classes": [Function],
                        "invisible": [Function],
                        "open": [Function],
                        "transitionDuration": [Function],
                      },
                      "render": [Function],
                    },
                    "displayName": "WithStyles(ForwardRef(Backdrop))",
                    "options": Object {
                      "defaultTheme": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "only": [Function],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                          "width": [Function],
                        },
                        "direction": "ltr",
                        "mixins": Object {
                          "gutters": [Function],
                          "toolbar": Object {
                            "@media (min-width:0px) and (orientation: landscape)": Object {
                              "minHeight": 48,
                            },
                            "@media (min-width:600px)": Object {
                              "minHeight": 64,
                            },
                            "minHeight": 56,
                          },
                        },
                        "overrides": Object {},
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "augmentColor": [Function],
                          "background": Object {
                            "default": "#fafafa",
                            "paper": "#fff",
                          },
                          "common": Object {
                            "black": "#000",
                            "white": "#fff",
                          },
                          "contrastThreshold": 3,
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "getContrastText": [Function],
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                          "tonalOffset": 0.2,
                          "type": "light",
                        },
                        "props": Object {},
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": [Function],
                        "transitions": Object {
                          "create": [Function],
                          "duration": Object {
                            "complex": 375,
                            "enteringScreen": 225,
                            "leavingScreen": 195,
                            "short": 250,
                            "shorter": 200,
                            "shortest": 150,
                            "standard": 300,
                          },
                          "easing": Object {
                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                          },
                          "getAutoHeightDuration": [Function],
                        },
                        "typography": Object {
                          "body1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.5,
                          },
                          "body2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.01071em",
                            "lineHeight": 1.43,
                          },
                          "button": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.02857em",
                            "lineHeight": 1.75,
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.03333em",
                            "lineHeight": 1.66,
                          },
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": 14,
                          "fontWeightBold": 700,
                          "fontWeightLight": 300,
                          "fontWeightMedium": 500,
                          "fontWeightRegular": 400,
                          "h1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "6rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.01562em",
                            "lineHeight": 1,
                          },
                          "h2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3.75rem",
                            "fontWeight": 300,
                            "letterSpacing": "-0.00833em",
                            "lineHeight": 1,
                          },
                          "h3": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "3rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.04,
                          },
                          "h4": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "2.125rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00735em",
                            "lineHeight": 1.17,
                          },
                          "h5": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.5rem",
                            "fontWeight": 400,
                            "letterSpacing": "0em",
                            "lineHeight": 1.33,
                          },
                          "h6": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1.25rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.0075em",
                            "lineHeight": 1.6,
                          },
                          "htmlFontSize": 16,
                          "overline": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.75rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.08333em",
                            "lineHeight": 2.66,
                            "textTransform": "uppercase",
                          },
                          "pxToRem": [Function],
                          "round": [Function],
                          "subtitle1": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "1rem",
                            "fontWeight": 400,
                            "letterSpacing": "0.00938em",
                            "lineHeight": 1.75,
                          },
                          "subtitle2": Object {
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": "0.875rem",
                            "fontWeight": 500,
                            "letterSpacing": "0.00714em",
                            "lineHeight": 1.57,
                          },
                        },
                        "zIndex": Object {
                          "appBar": 1100,
                          "drawer": 1200,
                          "mobileStepper": 1000,
                          "modal": 1300,
                          "snackbar": 1400,
                          "speedDial": 1050,
                          "tooltip": 1500,
                        },
                      },
                      "name": "MuiBackdrop",
                    },
                    "propTypes": Object {
                      "classes": [Function],
                      "innerRef": [Function],
                    },
                    "render": [Function],
                    "useStyles": [Function],
                  }
                }
                BackdropProps={
                  Object {
                    "transitionDuration": Object {
                      "enter": 225,
                      "exit": 195,
                    },
                  }
                }
                className="MuiDrawer-root MuiDrawer-modal makeStyles-createOrderDrawer-7"
                open={false}
              />
            </ForwardRef(Drawer)>
          </WithStyles(ForwardRef(Drawer))>
          <main
            className="makeStyles-content-19"
          />
        </div>
      </Layout>
    </Router>
  </BrowserRouter>
</Provider>
`;
